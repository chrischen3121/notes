#+TITLE: Linux Shell Scripting
#+OPTIONS: H:2 toc:1 num:2 ^:nil
#+LANGUAGE: en-US
#+AUTHOR: ChrisChen
#+EMAIL: ChrisChen3121@gmail.com
* 基础
  - shebang: ~#~ sharp ~!~ bang ~#!~ shebang
    - 执行带shebang ~#!/bin/bash~ 等同于 ~/bin/bash script.sh~
  - 所有变量的值都是 *字符串*
  - *等号左右空格问题* ~a = 1~ 为比较语句， ~a=1~ 为赋值语句

** 打印
   - 无引号 vs 单引号 vs 双引号
     - 无引号无法包含 ';'
     - 单引号Bash不会对 ~$var~ 求值
     - 双引号会需要一些转义符号
   - ~echo~ 输出自带 '\n' ~printf~ 不带
   - 彩色输出： ~\e[1;31m~ 31表示文本修改为红色，41表示背景修改为红色
     - ~\e[0m~ 重置

** 环境变量
*** 查看进程环境变量
    #+begin_src bash
      PID=`pgrep emacs`
      cat /proc/$PID/environ | tr '\0' '\n' # 默认是以\0分隔环境变量
    #+end_src
*** PATH
    ~PATH~ 通常定义在 ~/etc/environment~, ~/etc/profile~, ~~/.bashrc~
    - 修改PATH: ~export PATH="$PATH:/home/user/bin"~

*** 识别当前环境SHELL
    #+begin_src bash
      echo $SHELL
      echo $0
    #+end_src

*** *检查是否为超级用户*
    #+begin_src bash
      if [ $UID -ne 0 ]; then
	  echo Non root user. Please run as root.
      else
	  echo "Root user"
      fi
    #+end_src

** 数学运算
*** let
    #+begin_src bash
      num1=5
      num2=4
      let result=num1+num2
      let num1++
      let num2+=3
    #+end_src

*** 操作符 ~(())~, ~[]~
    #+begin_src bash
      num1=5
      num2=4
      result=$[ num1 + num2 ]
      result=$[ $num1 + 4 ]
      result=$(( num1 + 6 ))
    #+end_src

*** expr
    #+begin_src bash
      result=`expr 3 + 4`
      result=$(expr $num1 + 1)
    #+end_src

*** 浮点数运算 ~bc~
    #+begin_src bash
      echo "4 * 0.52" | bc
      result = `echo "$num1 * 1.5" | bc`

      # 设定精度、进制等
      echo "scale=4;1/3" | bc
      #=> .3333
      echo "obase=2;$num" | bc # 十进制转二进制
      echo "obase=10;ibase=2;$binary" | bc # 二进制转十进制

      # 平方，平方根
      echo "10^10" | bc
      echo "sqrt(100)" | bc
    #+end_src

** 重定向
   - 特殊文件： ~/dev/stdin~ 可作为输出文件名来使用stdin, ~/dev/stdout~, ~/dev/stderr~, ~/dev/null~
   - ~tee~ 命令接收stdin的数据，将一份数据写入作为参数的文件中，另输出一份到stdout，作为后续命令的stdin
   - ~<~ 操作符从文件中读取至stdin： ~cmd < file~
